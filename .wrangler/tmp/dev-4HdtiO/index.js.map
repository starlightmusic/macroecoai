{
  "version": 3,
  "sources": ["../bundle-qTFutO/checked-fetch.js", "../../../src/index.js", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-qTFutO/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-qTFutO/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/deepak/Documents/AI/macroecoai/macroecoai/.wrangler/tmp/dev-4HdtiO",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "// Authentication helper functions\nfunction generateSessionToken() {\n  return crypto.randomUUID();\n}\n\nfunction isValidEmail(email) {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n}\n\nasync function getSessionUser(request, env) {\n  const sessionToken = request.headers.get('Authorization')?.replace('Bearer ', '') || \n                      getCookie(request, 'session_token');\n  \n  if (!sessionToken) return null;\n  \n  try {\n    const result = await env.DB.prepare(`\n      SELECT u.id, u.email, u.name, u.created_at, u.last_login, u.subscription_status\n      FROM users u \n      JOIN sessions s ON u.id = s.user_id \n      WHERE s.token = ? AND s.expires_at > datetime('now')\n    `).bind(sessionToken).first();\n    \n    return result || null;\n  } catch (error) {\n    console.error('Session validation error:', error);\n    return null;\n  }\n}\n\nfunction getCookie(request, name) {\n  const cookieHeader = request.headers.get('Cookie');\n  if (!cookieHeader) return null;\n  \n  const cookies = cookieHeader.split(';').map(c => c.trim());\n  const cookie = cookies.find(c => c.startsWith(`${name}=`));\n  return cookie ? cookie.split('=')[1] : null;\n}\n\nfunction setCookie(name, value, maxAge = 7 * 24 * 60 * 60) {\n  return `${name}=${value}; Max-Age=${maxAge}; HttpOnly; Secure; SameSite=Strict; Path=/`;\n}\n\n// Authentication API handlers\nasync function handleAuthRegister(request, env) {\n  if (request.method !== 'POST') {\n    return new Response(JSON.stringify({ error: 'Method not allowed' }), {\n      status: 405,\n      headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' }\n    });\n  }\n  \n  try {\n    const { name, email } = await request.json();\n    \n    if (!name || !email) {\n      return new Response(JSON.stringify({ error: 'Name and email are required' }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' }\n      });\n    }\n    \n    if (!isValidEmail(email)) {\n      return new Response(JSON.stringify({ error: 'Invalid email format' }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' }\n      });\n    }\n    \n    // Check if user already exists\n    const existingUser = await env.DB.prepare('SELECT id FROM users WHERE email = ?').bind(email).first();\n    if (existingUser) {\n      return new Response(JSON.stringify({ error: 'User already exists with this email' }), {\n        status: 409,\n        headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' }\n      });\n    }\n    \n    // Create new user\n    const result = await env.DB.prepare(`\n      INSERT INTO users (email, name, created_at) \n      VALUES (?, ?, datetime('now'))\n    `).bind(email, name).run();\n    \n    const userId = result.meta.last_row_id;\n    \n    // Create session\n    const sessionToken = generateSessionToken();\n    const expiresAt = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000); // 7 days\n    \n    await env.DB.prepare(`\n      INSERT INTO sessions (token, user_id, expires_at) \n      VALUES (?, ?, ?)\n    `).bind(sessionToken, userId, expiresAt.toISOString()).run();\n    \n    const user = {\n      id: userId,\n      email,\n      name,\n      subscription_status: 'none'\n    };\n    \n    return new Response(JSON.stringify({ \n      success: true, \n      user, \n      session_token: sessionToken \n    }), {\n      status: 201,\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Set-Cookie': setCookie('session_token', sessionToken)\n      }\n    });\n    \n  } catch (error) {\n    console.error('Registration error:', error);\n    return new Response(JSON.stringify({ error: 'Registration failed' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' }\n    });\n  }\n}\n\nasync function handleAuthLogin(request, env) {\n  if (request.method !== 'POST') {\n    return new Response(JSON.stringify({ error: 'Method not allowed' }), {\n      status: 405,\n      headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' }\n    });\n  }\n  \n  try {\n    const { email } = await request.json();\n    \n    if (!email) {\n      return new Response(JSON.stringify({ error: 'Email is required' }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' }\n      });\n    }\n    \n    if (!isValidEmail(email)) {\n      return new Response(JSON.stringify({ error: 'Invalid email format' }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' }\n      });\n    }\n    \n    // Find user\n    const user = await env.DB.prepare('SELECT * FROM users WHERE email = ?').bind(email).first();\n    if (!user) {\n      return new Response(JSON.stringify({ error: 'User not found' }), {\n        status: 404,\n        headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' }\n      });\n    }\n    \n    // Update last login\n    await env.DB.prepare(`\n      UPDATE users SET last_login = datetime('now') WHERE id = ?\n    `).bind(user.id).run();\n    \n    // Create new session\n    const sessionToken = generateSessionToken();\n    const expiresAt = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000); // 7 days\n    \n    await env.DB.prepare(`\n      INSERT INTO sessions (token, user_id, expires_at) \n      VALUES (?, ?, ?)\n    `).bind(sessionToken, user.id, expiresAt.toISOString()).run();\n    \n    return new Response(JSON.stringify({ \n      success: true, \n      user: {\n        id: user.id,\n        email: user.email,\n        name: user.name,\n        subscription_status: user.subscription_status || 'none'\n      },\n      session_token: sessionToken \n    }), {\n      status: 200,\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Set-Cookie': setCookie('session_token', sessionToken)\n      }\n    });\n    \n  } catch (error) {\n    console.error('Login error:', error);\n    return new Response(JSON.stringify({ error: 'Login failed' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' }\n    });\n  }\n}\n\nasync function handleAuthLogout(request, env) {\n  if (request.method !== 'POST') {\n    return new Response(JSON.stringify({ error: 'Method not allowed' }), {\n      status: 405,\n      headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' }\n    });\n  }\n  \n  try {\n    const sessionToken = request.headers.get('Authorization')?.replace('Bearer ', '') || \n                        getCookie(request, 'session_token');\n    \n    if (sessionToken) {\n      // Delete session from database\n      await env.DB.prepare('DELETE FROM sessions WHERE token = ?').bind(sessionToken).run();\n    }\n    \n    return new Response(JSON.stringify({ success: true }), {\n      status: 200,\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Set-Cookie': setCookie('session_token', '', 0) // Clear cookie\n      }\n    });\n    \n  } catch (error) {\n    console.error('Logout error:', error);\n    return new Response(JSON.stringify({ error: 'Logout failed' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' }\n    });\n  }\n}\n\nasync function handleAuthMe(request, env) {\n  if (request.method !== 'GET') {\n    return new Response(JSON.stringify({ error: 'Method not allowed' }), {\n      status: 405,\n      headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' }\n    });\n  }\n  \n  try {\n    const user = await getSessionUser(request, env);\n    \n    if (!user) {\n      return new Response(JSON.stringify({ error: 'Not authenticated' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' }\n      });\n    }\n    \n    return new Response(JSON.stringify({ user }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' }\n    });\n    \n  } catch (error) {\n    console.error('Auth me error:', error);\n    return new Response(JSON.stringify({ error: 'Authentication check failed' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' }\n    });\n  }\n}\n\nasync function handleWorldBankAPI(request) {\n  try {\n    const response = await fetch('https://search.worldbank.org/api/v3/wds?format=json&owner=EMFMD&fl=count,txturl&strdate=2024-01-01&rows=100');\n    \n    if (!response.ok) {\n      throw new Error(`World Bank API error: ${response.status}`);\n    }\n    \n    const data = await response.json();\n    \n    // Return response with CORS headers\n    return new Response(JSON.stringify(data), {\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET',\n        'Access-Control-Allow-Headers': 'Content-Type',\n      },\n    });\n  } catch (error) {\n    console.error('World Bank API error:', error);\n    return new Response(JSON.stringify({ \n      error: 'Failed to fetch World Bank data',\n      message: error.message \n    }), {\n      status: 500,\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n      },\n    });\n  }\n}\n\nasync function handleWorldBankTextAPI(request) {\n  try {\n    const url = new URL(request.url);\n    const documentUrl = url.searchParams.get('url');\n    \n    console.log('\uD83D\uDD0D WORKERS DEBUG: /api/worldbank/text endpoint called');\n    console.log('\uD83D\uDCE5 Query params:', Object.fromEntries(url.searchParams.entries()));\n    console.log('\uD83D\uDD17 URL parameter:', documentUrl);\n    \n    if (!documentUrl) {\n      console.log('\u274C No URL parameter provided');\n      return new Response(JSON.stringify({ error: 'URL parameter is required' }), {\n        status: 400,\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n        },\n      });\n    }\n    \n    console.log('\uD83D\uDCE1 Attempting to fetch:', documentUrl);\n    \n    // Add browser-like headers to avoid 403 errors\n    const headers = {\n      'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',\n      'Accept': 'text/plain,text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\n      'Accept-Language': 'en-US,en;q=0.5',\n      'Accept-Encoding': 'gzip, deflate',\n      'Referer': 'https://www.worldbank.org/',\n      'Connection': 'keep-alive',\n      'Upgrade-Insecure-Requests': '1'\n    };\n    \n    console.log('\uD83D\uDCE4 Using headers:', headers);\n    \n    const response = await fetch(documentUrl, {\n      method: 'GET',\n      headers: headers,\n      redirect: 'follow'  // Follow redirects automatically\n    });\n    \n    console.log('\uD83D\uDCCA World Bank response status:', response.status);\n    console.log('\uD83D\uDCCA World Bank response ok:', response.ok);\n    console.log('\uD83D\uDCCA World Bank response headers:', Object.fromEntries(response.headers.entries()));\n    \n    if (!response.ok) {\n      console.log('\u274C World Bank returned error status:', response.status);\n      const errorBody = await response.text();\n      console.log('\u274C Error response body:', errorBody.substring(0, 500));\n      throw new Error(`Document fetch error: ${response.status}`);\n    }\n    \n    const text = await response.text();\n    console.log('\u2705 Successfully fetched text from World Bank, length:', text.length);\n    console.log('\uD83D\uDCDD First 200 chars:', text.substring(0, 200));\n    \n    // Return response with CORS headers\n    return new Response(text, {\n      headers: {\n        'Content-Type': 'text/plain',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET',\n        'Access-Control-Allow-Headers': 'Content-Type',\n      },\n    });\n  } catch (error) {\n    console.error('\u274C WORKERS ERROR: Document text fetch error:', error);\n    console.error('\u274C Error name:', error.name);\n    console.error('\u274C Error message:', error.message);\n    return new Response(JSON.stringify({ \n      error: 'Failed to fetch document text',\n      message: error.message \n    }), {\n      status: 500,\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n      },\n    });\n  }\n}\n\nasync function handleWorldBankSummaryAPI(request, env) {\n  try {\n    const url = new URL(request.url);\n    const documentUrl = url.searchParams.get('url');\n    \n    console.log('\uD83E\uDD16 WORKERS DEBUG: /api/worldbank/summary endpoint called');\n    console.log('\uD83D\uDCE5 Query params:', Object.fromEntries(url.searchParams.entries()));\n    console.log('\uD83D\uDD17 URL parameter:', documentUrl);\n    \n    if (!documentUrl) {\n      console.log('\u274C No URL parameter provided');\n      return new Response(JSON.stringify({ error: 'URL parameter is required' }), {\n        status: 400,\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n        },\n      });\n    }\n    \n    console.log('\uD83D\uDCE1 Fetching document text from:', documentUrl);\n    \n    // First fetch the document text\n    const headers = {\n      'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',\n      'Accept': 'text/plain,text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\n      'Accept-Language': 'en-US,en;q=0.5',\n      'Accept-Encoding': 'gzip, deflate',\n      'Referer': 'https://www.worldbank.org/',\n      'Connection': 'keep-alive',\n      'Upgrade-Insecure-Requests': '1'\n    };\n    \n    const docResponse = await fetch(documentUrl, {\n      method: 'GET',\n      headers: headers,\n      redirect: 'follow'\n    });\n    \n    if (!docResponse.ok) {\n      throw new Error(`Document fetch error: ${docResponse.status}`);\n    }\n    \n    const documentText = await docResponse.text();\n    console.log('\u2705 Document fetched, length:', documentText.length);\n    \n    // Generate AI summary using Gemini REST API\n    console.log('\uD83E\uDD16 Generating AI summary with Gemini 1.5 Flash...');\n    const geminiApiKey = env.GEMINI_API_KEY;\n    \n    if (!geminiApiKey) {\n      throw new Error('GEMINI_API_KEY environment variable not set');\n    }\n    \n    const prompt = `Please summarize this World Bank economic document in exactly 250 words. Focus on the key economic findings, indicators, policy implications, and outlook. Structure the summary with clear paragraphs for readability. Here is the document text:\n\n${documentText}`;\n    \n    const geminiResponse = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${geminiApiKey}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        contents: [{\n          parts: [{\n            text: prompt\n          }]\n        }]\n      })\n    });\n    \n    if (!geminiResponse.ok) {\n      const errorText = await geminiResponse.text();\n      console.log('\u274C Gemini API error:', geminiResponse.status, errorText);\n      throw new Error(`Gemini API error: ${geminiResponse.status}`);\n    }\n    \n    const geminiResult = await geminiResponse.json();\n    const summary = geminiResult.candidates[0].content.parts[0].text;\n    \n    console.log('\u2705 AI summary generated, length:', summary.length);\n    console.log('\uD83D\uDCDD Summary preview:', summary.substring(0, 100) + '...');\n    \n    // Return response with CORS headers\n    return new Response(JSON.stringify({\n      summary: summary,\n      originalLength: documentText.length,\n      summaryLength: summary.length\n    }), {\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET',\n        'Access-Control-Allow-Headers': 'Content-Type',\n      },\n    });\n  } catch (error) {\n    console.error('\u274C WORKERS ERROR: AI summary generation error:', error);\n    console.error('\u274C Error name:', error.name);\n    console.error('\u274C Error message:', error.message);\n    return new Response(JSON.stringify({ \n      error: 'Failed to generate AI summary',\n      message: error.message \n    }), {\n      status: 500,\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n      },\n    });\n  }\n}\n\nexport default {\n  async fetch(request, env, ctx) {\n    const url = new URL(request.url);\n    const pathname = url.pathname;\n\n    // Handle different routes\n    switch (pathname) {\n      case '/':\n        return env.ASSETS.fetch(new Request(url.origin + '/index.html'));\n        \n      case '/subscribe':\n        return env.ASSETS.fetch(new Request(url.origin + '/subscribe.html'));\n        \n      case '/article':\n        return env.ASSETS.fetch(new Request(url.origin + '/article.html'));\n        \n      case '/success':\n        return env.ASSETS.fetch(new Request(url.origin + '/success.html'));\n        \n      case '/api/worldbank':\n        return await handleWorldBankAPI(request);\n        \n      case '/api/worldbank/text':\n        return await handleWorldBankTextAPI(request);\n        \n      case '/api/worldbank/summary':\n        return await handleWorldBankSummaryAPI(request, env);\n        \n      case '/api/auth/register':\n        return await handleAuthRegister(request, env);\n        \n      case '/api/auth/login':\n        return await handleAuthLogin(request, env);\n        \n      case '/api/auth/logout':\n        return await handleAuthLogout(request, env);\n        \n      case '/api/auth/me':\n        return await handleAuthMe(request, env);\n        \n      default:\n        // Try to serve static assets directly\n        try {\n          return await env.ASSETS.fetch(request);\n        } catch (error) {\n          // If asset not found, redirect to homepage\n          return env.ASSETS.fetch(new Request(url.origin + '/index.html'));\n        }\n    }\n  }\n};", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/deepak/Documents/AI/macroecoai/macroecoai/src/index.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/deepak/Documents/AI/macroecoai/macroecoai/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/deepak/Documents/AI/macroecoai/macroecoai/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/deepak/Documents/AI/macroecoai/macroecoai/src/index.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/deepak/Documents/AI/macroecoai/macroecoai/.wrangler/tmp/bundle-qTFutO/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/deepak/Documents/AI/macroecoai/macroecoai/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/deepak/Documents/AI/macroecoai/macroecoai/.wrangler/tmp/bundle-qTFutO/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/deepak/Documents/AI/macroecoai/macroecoai/.wrangler/tmp/bundle-qTFutO/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": ";;;;AAAA,IAAM,OAAO,oBAAI,IAAI;AAErB,SAAS,SAAS,SAAS,MAAM;AAChC,QAAM,MACL,mBAAmB,MAChB,UACA,IAAI;AAAA,KACH,OAAO,YAAY,WACjB,IAAI,QAAQ,SAAS,IAAI,IACzB,SACD;AAAA,EACH;AACH,MAAI,IAAI,QAAQ,IAAI,SAAS,SAAS,IAAI,aAAa,UAAU;AAChE,QAAI,CAAC,KAAK,IAAI,IAAI,SAAS,CAAC,GAAG;AAC9B,WAAK,IAAI,IAAI,SAAS,CAAC;AACvB,cAAQ;AAAA,QACP;AAAA,KACO,IAAI,SAAS,CAAC;AAAA;AAAA,MACtB;AAAA,IACD;AAAA,EACD;AACD;AAnBS;AAqBT,WAAW,QAAQ,IAAI,MAAM,WAAW,OAAO;AAAA,EAC9C,MAAM,QAAQ,SAAS,UAAU;AAChC,UAAM,CAAC,SAAS,IAAI,IAAI;AACxB,aAAS,SAAS,IAAI;AACtB,WAAO,QAAQ,MAAM,QAAQ,SAAS,QAAQ;AAAA,EAC/C;AACD,CAAC;;;AC5BD,SAAS,uBAAuB;AAC9B,SAAO,OAAO,WAAW;AAC3B;AAFS;AAIT,SAAS,aAAa,OAAO;AAC3B,QAAM,aAAa;AACnB,SAAO,WAAW,KAAK,KAAK;AAC9B;AAHS;AAKT,eAAe,eAAe,SAAS,KAAK;AAC1C,QAAM,eAAe,QAAQ,QAAQ,IAAI,eAAe,GAAG,QAAQ,WAAW,EAAE,KAC5D,UAAU,SAAS,eAAe;AAEtD,MAAI,CAAC,aAAc,QAAO;AAE1B,MAAI;AACF,UAAM,SAAS,MAAM,IAAI,GAAG,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,KAKnC,EAAE,KAAK,YAAY,EAAE,MAAM;AAE5B,WAAO,UAAU;AAAA,EACnB,SAAS,OAAO;AACd,YAAQ,MAAM,6BAA6B,KAAK;AAChD,WAAO;AAAA,EACT;AACF;AAnBe;AAqBf,SAAS,UAAU,SAAS,MAAM;AAChC,QAAM,eAAe,QAAQ,QAAQ,IAAI,QAAQ;AACjD,MAAI,CAAC,aAAc,QAAO;AAE1B,QAAM,UAAU,aAAa,MAAM,GAAG,EAAE,IAAI,OAAK,EAAE,KAAK,CAAC;AACzD,QAAM,SAAS,QAAQ,KAAK,OAAK,EAAE,WAAW,GAAG,IAAI,GAAG,CAAC;AACzD,SAAO,SAAS,OAAO,MAAM,GAAG,EAAE,CAAC,IAAI;AACzC;AAPS;AAST,SAAS,UAAU,MAAM,OAAO,SAAS,IAAI,KAAK,KAAK,IAAI;AACzD,SAAO,GAAG,IAAI,IAAI,KAAK,aAAa,MAAM;AAC5C;AAFS;AAKT,eAAe,mBAAmB,SAAS,KAAK;AAC9C,MAAI,QAAQ,WAAW,QAAQ;AAC7B,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,qBAAqB,CAAC,GAAG;AAAA,MACnE,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,oBAAoB,+BAA+B,IAAI;AAAA,IACpF,CAAC;AAAA,EACH;AAEA,MAAI;AACF,UAAM,EAAE,MAAM,MAAM,IAAI,MAAM,QAAQ,KAAK;AAE3C,QAAI,CAAC,QAAQ,CAAC,OAAO;AACnB,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,8BAA8B,CAAC,GAAG;AAAA,QAC5E,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,oBAAoB,+BAA+B,IAAI;AAAA,MACpF,CAAC;AAAA,IACH;AAEA,QAAI,CAAC,aAAa,KAAK,GAAG;AACxB,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,uBAAuB,CAAC,GAAG;AAAA,QACrE,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,oBAAoB,+BAA+B,IAAI;AAAA,MACpF,CAAC;AAAA,IACH;AAGA,UAAM,eAAe,MAAM,IAAI,GAAG,QAAQ,sCAAsC,EAAE,KAAK,KAAK,EAAE,MAAM;AACpG,QAAI,cAAc;AAChB,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,sCAAsC,CAAC,GAAG;AAAA,QACpF,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,oBAAoB,+BAA+B,IAAI;AAAA,MACpF,CAAC;AAAA,IACH;AAGA,UAAM,SAAS,MAAM,IAAI,GAAG,QAAQ;AAAA;AAAA;AAAA,KAGnC,EAAE,KAAK,OAAO,IAAI,EAAE,IAAI;AAEzB,UAAM,SAAS,OAAO,KAAK;AAG3B,UAAM,eAAe,qBAAqB;AAC1C,UAAM,YAAY,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,GAAI;AAE/D,UAAM,IAAI,GAAG,QAAQ;AAAA;AAAA;AAAA,KAGpB,EAAE,KAAK,cAAc,QAAQ,UAAU,YAAY,CAAC,EAAE,IAAI;AAE3D,UAAM,OAAO;AAAA,MACX,IAAI;AAAA,MACJ;AAAA,MACA;AAAA,MACA,qBAAqB;AAAA,IACvB;AAEA,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC,SAAS;AAAA,MACT;AAAA,MACA,eAAe;AAAA,IACjB,CAAC,GAAG;AAAA,MACF,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,QAC/B,cAAc,UAAU,iBAAiB,YAAY;AAAA,MACvD;AAAA,IACF,CAAC;AAAA,EAEH,SAAS,OAAO;AACd,YAAQ,MAAM,uBAAuB,KAAK;AAC1C,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,sBAAsB,CAAC,GAAG;AAAA,MACpE,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,oBAAoB,+BAA+B,IAAI;AAAA,IACpF,CAAC;AAAA,EACH;AACF;AA9Ee;AAgFf,eAAe,gBAAgB,SAAS,KAAK;AAC3C,MAAI,QAAQ,WAAW,QAAQ;AAC7B,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,qBAAqB,CAAC,GAAG;AAAA,MACnE,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,oBAAoB,+BAA+B,IAAI;AAAA,IACpF,CAAC;AAAA,EACH;AAEA,MAAI;AACF,UAAM,EAAE,MAAM,IAAI,MAAM,QAAQ,KAAK;AAErC,QAAI,CAAC,OAAO;AACV,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,oBAAoB,CAAC,GAAG;AAAA,QAClE,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,oBAAoB,+BAA+B,IAAI;AAAA,MACpF,CAAC;AAAA,IACH;AAEA,QAAI,CAAC,aAAa,KAAK,GAAG;AACxB,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,uBAAuB,CAAC,GAAG;AAAA,QACrE,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,oBAAoB,+BAA+B,IAAI;AAAA,MACpF,CAAC;AAAA,IACH;AAGA,UAAM,OAAO,MAAM,IAAI,GAAG,QAAQ,qCAAqC,EAAE,KAAK,KAAK,EAAE,MAAM;AAC3F,QAAI,CAAC,MAAM;AACT,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,iBAAiB,CAAC,GAAG;AAAA,QAC/D,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,oBAAoB,+BAA+B,IAAI;AAAA,MACpF,CAAC;AAAA,IACH;AAGA,UAAM,IAAI,GAAG,QAAQ;AAAA;AAAA,KAEpB,EAAE,KAAK,KAAK,EAAE,EAAE,IAAI;AAGrB,UAAM,eAAe,qBAAqB;AAC1C,UAAM,YAAY,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,GAAI;AAE/D,UAAM,IAAI,GAAG,QAAQ;AAAA;AAAA;AAAA,KAGpB,EAAE,KAAK,cAAc,KAAK,IAAI,UAAU,YAAY,CAAC,EAAE,IAAI;AAE5D,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC,SAAS;AAAA,MACT,MAAM;AAAA,QACJ,IAAI,KAAK;AAAA,QACT,OAAO,KAAK;AAAA,QACZ,MAAM,KAAK;AAAA,QACX,qBAAqB,KAAK,uBAAuB;AAAA,MACnD;AAAA,MACA,eAAe;AAAA,IACjB,CAAC,GAAG;AAAA,MACF,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,QAC/B,cAAc,UAAU,iBAAiB,YAAY;AAAA,MACvD;AAAA,IACF,CAAC;AAAA,EAEH,SAAS,OAAO;AACd,YAAQ,MAAM,gBAAgB,KAAK;AACnC,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,eAAe,CAAC,GAAG;AAAA,MAC7D,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,oBAAoB,+BAA+B,IAAI;AAAA,IACpF,CAAC;AAAA,EACH;AACF;AAzEe;AA2Ef,eAAe,iBAAiB,SAAS,KAAK;AAC5C,MAAI,QAAQ,WAAW,QAAQ;AAC7B,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,qBAAqB,CAAC,GAAG;AAAA,MACnE,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,oBAAoB,+BAA+B,IAAI;AAAA,IACpF,CAAC;AAAA,EACH;AAEA,MAAI;AACF,UAAM,eAAe,QAAQ,QAAQ,IAAI,eAAe,GAAG,QAAQ,WAAW,EAAE,KAC5D,UAAU,SAAS,eAAe;AAEtD,QAAI,cAAc;AAEhB,YAAM,IAAI,GAAG,QAAQ,sCAAsC,EAAE,KAAK,YAAY,EAAE,IAAI;AAAA,IACtF;AAEA,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,SAAS,KAAK,CAAC,GAAG;AAAA,MACrD,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,QAC/B,cAAc,UAAU,iBAAiB,IAAI,CAAC;AAAA;AAAA,MAChD;AAAA,IACF,CAAC;AAAA,EAEH,SAAS,OAAO;AACd,YAAQ,MAAM,iBAAiB,KAAK;AACpC,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,gBAAgB,CAAC,GAAG;AAAA,MAC9D,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,oBAAoB,+BAA+B,IAAI;AAAA,IACpF,CAAC;AAAA,EACH;AACF;AAjCe;AAmCf,eAAe,aAAa,SAAS,KAAK;AACxC,MAAI,QAAQ,WAAW,OAAO;AAC5B,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,qBAAqB,CAAC,GAAG;AAAA,MACnE,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,oBAAoB,+BAA+B,IAAI;AAAA,IACpF,CAAC;AAAA,EACH;AAEA,MAAI;AACF,UAAM,OAAO,MAAM,eAAe,SAAS,GAAG;AAE9C,QAAI,CAAC,MAAM;AACT,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,oBAAoB,CAAC,GAAG;AAAA,QAClE,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,oBAAoB,+BAA+B,IAAI;AAAA,MACpF,CAAC;AAAA,IACH;AAEA,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,KAAK,CAAC,GAAG;AAAA,MAC5C,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,oBAAoB,+BAA+B,IAAI;AAAA,IACpF,CAAC;AAAA,EAEH,SAAS,OAAO;AACd,YAAQ,MAAM,kBAAkB,KAAK;AACrC,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,8BAA8B,CAAC,GAAG;AAAA,MAC5E,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,oBAAoB,+BAA+B,IAAI;AAAA,IACpF,CAAC;AAAA,EACH;AACF;AA9Be;AAgCf,eAAe,mBAAmB,SAAS;AACzC,MAAI;AACF,UAAM,WAAW,MAAM,MAAM,6GAA6G;AAE1I,QAAI,CAAC,SAAS,IAAI;AAChB,YAAM,IAAI,MAAM,yBAAyB,SAAS,MAAM,EAAE;AAAA,IAC5D;AAEA,UAAM,OAAO,MAAM,SAAS,KAAK;AAGjC,WAAO,IAAI,SAAS,KAAK,UAAU,IAAI,GAAG;AAAA,MACxC,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,QAC/B,gCAAgC;AAAA,QAChC,gCAAgC;AAAA,MAClC;AAAA,IACF,CAAC;AAAA,EACH,SAAS,OAAO;AACd,YAAQ,MAAM,yBAAyB,KAAK;AAC5C,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC,OAAO;AAAA,MACP,SAAS,MAAM;AAAA,IACjB,CAAC,GAAG;AAAA,MACF,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,MACjC;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAhCe;AAkCf,eAAe,uBAAuB,SAAS;AAC7C,MAAI;AACF,UAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,UAAM,cAAc,IAAI,aAAa,IAAI,KAAK;AAE9C,YAAQ,IAAI,8DAAuD;AACnE,YAAQ,IAAI,2BAAoB,OAAO,YAAY,IAAI,aAAa,QAAQ,CAAC,CAAC;AAC9E,YAAQ,IAAI,4BAAqB,WAAW;AAE5C,QAAI,CAAC,aAAa;AAChB,cAAQ,IAAI,kCAA6B;AACzC,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,4BAA4B,CAAC,GAAG;AAAA,QAC1E,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,+BAA+B;AAAA,QACjC;AAAA,MACF,CAAC;AAAA,IACH;AAEA,YAAQ,IAAI,kCAA2B,WAAW;AAGlD,UAAM,UAAU;AAAA,MACd,cAAc;AAAA,MACd,UAAU;AAAA,MACV,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,WAAW;AAAA,MACX,cAAc;AAAA,MACd,6BAA6B;AAAA,IAC/B;AAEA,YAAQ,IAAI,4BAAqB,OAAO;AAExC,UAAM,WAAW,MAAM,MAAM,aAAa;AAAA,MACxC,QAAQ;AAAA,MACR;AAAA,MACA,UAAU;AAAA;AAAA,IACZ,CAAC;AAED,YAAQ,IAAI,yCAAkC,SAAS,MAAM;AAC7D,YAAQ,IAAI,qCAA8B,SAAS,EAAE;AACrD,YAAQ,IAAI,0CAAmC,OAAO,YAAY,SAAS,QAAQ,QAAQ,CAAC,CAAC;AAE7F,QAAI,CAAC,SAAS,IAAI;AAChB,cAAQ,IAAI,4CAAuC,SAAS,MAAM;AAClE,YAAM,YAAY,MAAM,SAAS,KAAK;AACtC,cAAQ,IAAI,+BAA0B,UAAU,UAAU,GAAG,GAAG,CAAC;AACjE,YAAM,IAAI,MAAM,yBAAyB,SAAS,MAAM,EAAE;AAAA,IAC5D;AAEA,UAAM,OAAO,MAAM,SAAS,KAAK;AACjC,YAAQ,IAAI,6DAAwD,KAAK,MAAM;AAC/E,YAAQ,IAAI,8BAAuB,KAAK,UAAU,GAAG,GAAG,CAAC;AAGzD,WAAO,IAAI,SAAS,MAAM;AAAA,MACxB,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,QAC/B,gCAAgC;AAAA,QAChC,gCAAgC;AAAA,MAClC;AAAA,IACF,CAAC;AAAA,EACH,SAAS,OAAO;AACd,YAAQ,MAAM,oDAA+C,KAAK;AAClE,YAAQ,MAAM,sBAAiB,MAAM,IAAI;AACzC,YAAQ,MAAM,yBAAoB,MAAM,OAAO;AAC/C,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC,OAAO;AAAA,MACP,SAAS,MAAM;AAAA,IACjB,CAAC,GAAG;AAAA,MACF,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,MACjC;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAhFe;AAkFf,eAAe,0BAA0B,SAAS,KAAK;AACrD,MAAI;AACF,UAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,UAAM,cAAc,IAAI,aAAa,IAAI,KAAK;AAE9C,YAAQ,IAAI,iEAA0D;AACtE,YAAQ,IAAI,2BAAoB,OAAO,YAAY,IAAI,aAAa,QAAQ,CAAC,CAAC;AAC9E,YAAQ,IAAI,4BAAqB,WAAW;AAE5C,QAAI,CAAC,aAAa;AAChB,cAAQ,IAAI,kCAA6B;AACzC,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,4BAA4B,CAAC,GAAG;AAAA,QAC1E,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,+BAA+B;AAAA,QACjC;AAAA,MACF,CAAC;AAAA,IACH;AAEA,YAAQ,IAAI,0CAAmC,WAAW;AAG1D,UAAM,UAAU;AAAA,MACd,cAAc;AAAA,MACd,UAAU;AAAA,MACV,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,WAAW;AAAA,MACX,cAAc;AAAA,MACd,6BAA6B;AAAA,IAC/B;AAEA,UAAM,cAAc,MAAM,MAAM,aAAa;AAAA,MAC3C,QAAQ;AAAA,MACR;AAAA,MACA,UAAU;AAAA,IACZ,CAAC;AAED,QAAI,CAAC,YAAY,IAAI;AACnB,YAAM,IAAI,MAAM,yBAAyB,YAAY,MAAM,EAAE;AAAA,IAC/D;AAEA,UAAM,eAAe,MAAM,YAAY,KAAK;AAC5C,YAAQ,IAAI,oCAA+B,aAAa,MAAM;AAG9D,YAAQ,IAAI,0DAAmD;AAC/D,UAAM,eAAe,IAAI;AAEzB,QAAI,CAAC,cAAc;AACjB,YAAM,IAAI,MAAM,6CAA6C;AAAA,IAC/D;AAEA,UAAM,SAAS;AAAA;AAAA,EAEjB,YAAY;AAEV,UAAM,iBAAiB,MAAM,MAAM,gGAAgG,YAAY,IAAI;AAAA,MACjJ,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,gBAAgB;AAAA,MAClB;AAAA,MACA,MAAM,KAAK,UAAU;AAAA,QACnB,UAAU,CAAC;AAAA,UACT,OAAO,CAAC;AAAA,YACN,MAAM;AAAA,UACR,CAAC;AAAA,QACH,CAAC;AAAA,MACH,CAAC;AAAA,IACH,CAAC;AAED,QAAI,CAAC,eAAe,IAAI;AACtB,YAAM,YAAY,MAAM,eAAe,KAAK;AAC5C,cAAQ,IAAI,4BAAuB,eAAe,QAAQ,SAAS;AACnE,YAAM,IAAI,MAAM,qBAAqB,eAAe,MAAM,EAAE;AAAA,IAC9D;AAEA,UAAM,eAAe,MAAM,eAAe,KAAK;AAC/C,UAAM,UAAU,aAAa,WAAW,CAAC,EAAE,QAAQ,MAAM,CAAC,EAAE;AAE5D,YAAQ,IAAI,wCAAmC,QAAQ,MAAM;AAC7D,YAAQ,IAAI,8BAAuB,QAAQ,UAAU,GAAG,GAAG,IAAI,KAAK;AAGpE,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC;AAAA,MACA,gBAAgB,aAAa;AAAA,MAC7B,eAAe,QAAQ;AAAA,IACzB,CAAC,GAAG;AAAA,MACF,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,QAC/B,gCAAgC;AAAA,QAChC,gCAAgC;AAAA,MAClC;AAAA,IACF,CAAC;AAAA,EACH,SAAS,OAAO;AACd,YAAQ,MAAM,sDAAiD,KAAK;AACpE,YAAQ,MAAM,sBAAiB,MAAM,IAAI;AACzC,YAAQ,MAAM,yBAAoB,MAAM,OAAO;AAC/C,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC,OAAO;AAAA,MACP,SAAS,MAAM;AAAA,IACjB,CAAC,GAAG;AAAA,MACF,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,MACjC;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAhHe;AAkHf,IAAO,cAAQ;AAAA,EACb,MAAM,MAAM,SAAS,KAAK,KAAK;AAC7B,UAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,UAAM,WAAW,IAAI;AAGrB,YAAQ,UAAU;AAAA,MAChB,KAAK;AACH,eAAO,IAAI,OAAO,MAAM,IAAI,QAAQ,IAAI,SAAS,aAAa,CAAC;AAAA,MAEjE,KAAK;AACH,eAAO,IAAI,OAAO,MAAM,IAAI,QAAQ,IAAI,SAAS,iBAAiB,CAAC;AAAA,MAErE,KAAK;AACH,eAAO,IAAI,OAAO,MAAM,IAAI,QAAQ,IAAI,SAAS,eAAe,CAAC;AAAA,MAEnE,KAAK;AACH,eAAO,IAAI,OAAO,MAAM,IAAI,QAAQ,IAAI,SAAS,eAAe,CAAC;AAAA,MAEnE,KAAK;AACH,eAAO,MAAM,mBAAmB,OAAO;AAAA,MAEzC,KAAK;AACH,eAAO,MAAM,uBAAuB,OAAO;AAAA,MAE7C,KAAK;AACH,eAAO,MAAM,0BAA0B,SAAS,GAAG;AAAA,MAErD,KAAK;AACH,eAAO,MAAM,mBAAmB,SAAS,GAAG;AAAA,MAE9C,KAAK;AACH,eAAO,MAAM,gBAAgB,SAAS,GAAG;AAAA,MAE3C,KAAK;AACH,eAAO,MAAM,iBAAiB,SAAS,GAAG;AAAA,MAE5C,KAAK;AACH,eAAO,MAAM,aAAa,SAAS,GAAG;AAAA,MAExC;AAEE,YAAI;AACF,iBAAO,MAAM,IAAI,OAAO,MAAM,OAAO;AAAA,QACvC,SAAS,OAAO;AAEd,iBAAO,IAAI,OAAO,MAAM,IAAI,QAAQ,IAAI,SAAS,aAAa,CAAC;AAAA,QACjE;AAAA,IACJ;AAAA,EACF;AACF;;;ACjiBA,IAAM,YAAwB,8BAAO,SAAS,KAAK,MAAM,kBAAkB;AAC1E,MAAI;AACH,WAAO,MAAM,cAAc,KAAK,SAAS,GAAG;AAAA,EAC7C,UAAE;AACD,QAAI;AACH,UAAI,QAAQ,SAAS,QAAQ,CAAC,QAAQ,UAAU;AAC/C,cAAM,SAAS,QAAQ,KAAK,UAAU;AACtC,eAAO,EAAE,MAAM,OAAO,KAAK,GAAG,MAAM;AAAA,QAAC;AAAA,MACtC;AAAA,IACD,SAAS,GAAG;AACX,cAAQ,MAAM,4CAA4C,CAAC;AAAA,IAC5D;AAAA,EACD;AACD,GAb8B;AAe9B,IAAO,6CAAQ;;;ACRf,SAAS,YAAY,GAAmB;AACvC,SAAO;AAAA,IACN,MAAM,GAAG;AAAA,IACT,SAAS,GAAG,WAAW,OAAO,CAAC;AAAA,IAC/B,OAAO,GAAG;AAAA,IACV,OAAO,GAAG,UAAU,SAAY,SAAY,YAAY,EAAE,KAAK;AAAA,EAChE;AACD;AAPS;AAUT,IAAM,YAAwB,8BAAO,SAAS,KAAK,MAAM,kBAAkB;AAC1E,MAAI;AACH,WAAO,MAAM,cAAc,KAAK,SAAS,GAAG;AAAA,EAC7C,SAAS,GAAQ;AAChB,UAAM,QAAQ,YAAY,CAAC;AAC3B,WAAO,SAAS,KAAK,OAAO;AAAA,MAC3B,QAAQ;AAAA,MACR,SAAS,EAAE,+BAA+B,OAAO;AAAA,IAClD,CAAC;AAAA,EACF;AACD,GAV8B;AAY9B,IAAO,2CAAQ;;;ACzBJ,IAAM,mCAAmC;AAAA,EAE9B;AAAA,EAAyB;AAC3C;AACA,IAAO,sCAAQ;;;ACcnB,IAAM,wBAAsC,CAAC;AAKtC,SAAS,uBAAuB,MAAqC;AAC3E,wBAAsB,KAAK,GAAG,KAAK,KAAK,CAAC;AAC1C;AAFgB;AAShB,SAAS,uBACR,SACA,KACA,KACA,UACA,iBACsB;AACtB,QAAM,CAAC,MAAM,GAAG,IAAI,IAAI;AACxB,QAAM,gBAAmC;AAAA,IACxC;AAAA,IACA,KAAK,YAAY,QAAQ;AACxB,aAAO,uBAAuB,YAAY,QAAQ,KAAK,UAAU,IAAI;AAAA,IACtE;AAAA,EACD;AACA,SAAO,KAAK,SAAS,KAAK,KAAK,aAAa;AAC7C;AAfS;AAiBF,SAAS,kBACf,SACA,KACA,KACA,UACA,iBACsB;AACtB,SAAO,uBAAuB,SAAS,KAAK,KAAK,UAAU;AAAA,IAC1D,GAAG;AAAA,IACH;AAAA,EACD,CAAC;AACF;AAXgB;;;AC3ChB,IAAM,iCAAN,MAAM,gCAA8D;AAAA,EAGnE,YACU,eACA,MACT,SACC;AAHQ;AACA;AAGT,SAAK,WAAW;AAAA,EACjB;AAAA,EArBD,OAYoE;AAAA;AAAA;AAAA,EAC1D;AAAA,EAUT,UAAU;AACT,QAAI,EAAE,gBAAgB,kCAAiC;AACtD,YAAM,IAAI,UAAU,oBAAoB;AAAA,IACzC;AAEA,SAAK,SAAS;AAAA,EACf;AACD;AAEA,SAAS,oBAAoB,QAA0C;AAEtE,MACC,qCAAqC,UACrC,iCAAiC,WAAW,GAC3C;AACD,WAAO;AAAA,EACR;AAEA,aAAW,cAAc,kCAAkC;AAC1D,wBAAoB,UAAU;AAAA,EAC/B;AAEA,QAAM,kBAA+C,gCACpD,SACA,KACA,KACC;AACD,QAAI,OAAO,UAAU,QAAW;AAC/B,YAAM,IAAI,MAAM,6CAA6C;AAAA,IAC9D;AACA,WAAO,OAAO,MAAM,SAAS,KAAK,GAAG;AAAA,EACtC,GATqD;AAWrD,SAAO;AAAA,IACN,GAAG;AAAA,IACH,MAAM,SAAS,KAAK,KAAK;AACxB,YAAM,aAAyB,gCAAU,MAAM,MAAM;AACpD,YAAI,SAAS,eAAe,OAAO,cAAc,QAAW;AAC3D,gBAAM,aAAa,IAAI;AAAA,YACtB,KAAK,IAAI;AAAA,YACT,KAAK,QAAQ;AAAA,YACb,MAAM;AAAA,YAAC;AAAA,UACR;AACA,iBAAO,OAAO,UAAU,YAAY,KAAK,GAAG;AAAA,QAC7C;AAAA,MACD,GAT+B;AAU/B,aAAO,kBAAkB,SAAS,KAAK,KAAK,YAAY,eAAe;AAAA,IACxE;AAAA,EACD;AACD;AAxCS;AA0CT,SAAS,qBACR,OAC8B;AAE9B,MACC,qCAAqC,UACrC,iCAAiC,WAAW,GAC3C;AACD,WAAO;AAAA,EACR;AAEA,aAAW,cAAc,kCAAkC;AAC1D,wBAAoB,UAAU;AAAA,EAC/B;AAGA,SAAO,cAAc,MAAM;AAAA,IAC1B,mBAAyE,wBACxE,SACA,KACA,QACI;AACJ,WAAK,MAAM;AACX,WAAK,MAAM;AACX,UAAI,MAAM,UAAU,QAAW;AAC9B,cAAM,IAAI,MAAM,sDAAsD;AAAA,MACvE;AACA,aAAO,MAAM,MAAM,OAAO;AAAA,IAC3B,GAXyE;AAAA,IAazE,cAA0B,wBAAC,MAAM,SAAS;AACzC,UAAI,SAAS,eAAe,MAAM,cAAc,QAAW;AAC1D,cAAM,aAAa,IAAI;AAAA,UACtB,KAAK,IAAI;AAAA,UACT,KAAK,QAAQ;AAAA,UACb,MAAM;AAAA,UAAC;AAAA,QACR;AACA,eAAO,MAAM,UAAU,UAAU;AAAA,MAClC;AAAA,IACD,GAT0B;AAAA,IAW1B,MAAM,SAAwD;AAC7D,aAAO;AAAA,QACN;AAAA,QACA,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,MACN;AAAA,IACD;AAAA,EACD;AACD;AAnDS;AAqDT,IAAI;AACJ,IAAI,OAAO,wCAAU,UAAU;AAC9B,kBAAgB,oBAAoB,mCAAK;AAC1C,WAAW,OAAO,wCAAU,YAAY;AACvC,kBAAgB,qBAAqB,mCAAK;AAC3C;AACA,IAAO,kCAAQ;",
  "names": []
}
